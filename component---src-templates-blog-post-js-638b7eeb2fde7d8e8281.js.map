{"version":3,"sources":["webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.string.fixed.js","webpack:///./node_modules/gatsby-plugin-disqus/index.js","webpack:///./src/components/Comments.js","webpack:///./src/templates/blog-post.js"],"names":["createHTML","this","_interopRequireDefault","require","exports","__esModule","default","_extends2","_inheritsLoose2","_react","_propTypes","Disqus","_React$Component","props","_this","call","state","shortname","GATSBY_DISQUS_SHORTNAME","_proto","prototype","componentWillReceiveProps","nextProps","setState","componentWillMount","window","document","component","disqus_config","page","identifier","title","url","script","createElement","src","async","body","appendChild","render","id","__source","fileName","lineNumber","__self","Component","propTypes","string","Comments","getThumbnail","post","frontmatter","cover","childImageSharp","fixed","pageQuery","BlogPostTemplate","location","data","pageContext","markdownRemark","siteTitle","site","siteMetadata","previous","next","Layout","description","excerpt","pathname","thumbnail","type","style","scale","display","marginBottom","rhythm","marginTop","date","dangerouslySetInnerHTML","__html","html","Bio","flexWrap","justifyContent","listStyle","padding","marginLeft","to","fields","slug","rel","href"],"mappings":"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","file":"component---src-templates-blog-post-js-638b7eeb2fde7d8e8281.js","sourcesContent":["'use strict';\n// B.2.3.6 String.prototype.fixed()\nrequire('./_string-html')('fixed', function (createHTML) {\n  return function fixed() {\n    return createHTML(this, 'tt', '', '');\n  };\n});\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nrequire(\"./style.css\");\n\nvar _jsxFileName = \"/Users/brettstevenson/Desktop/Folder/gatsby-plugin-workspace/gatsby-plugin-disqus/src/index.js\";\n\nvar Disqus =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(Disqus, _React$Component);\n\n  function Disqus(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = props;\n    _this.shortname = typeof GATSBY_DISQUS_SHORTNAME !== \"undefined\" && GATSBY_DISQUS_SHORTNAME !== '' ? GATSBY_DISQUS_SHORTNAME : '';\n    return _this;\n  }\n\n  var _proto = Disqus.prototype;\n\n  _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    this.setState(nextProps);\n  };\n\n  _proto.componentWillMount = function componentWillMount() {\n    if (typeof window != 'undefined' && window.document) {\n      var component = this;\n\n      window.disqus_config = function () {\n        this.page.identifier = component.state.identifier;\n        this.page.title = component.state.title;\n        this.page.url = component.state.url;\n      };\n\n      var script = document.createElement('script');\n      script.src = \"//\" + this.shortname + \".disqus.com/embed.js\";\n      script.async = true;\n      document.body.appendChild(script);\n    }\n  };\n\n  _proto.render = function render() {\n    var props = this.props;\n    return _react.default.createElement(\"div\", (0, _extends2.default)({\n      id: \"disqus_thread\"\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  };\n\n  return Disqus;\n}(_react.default.Component);\n\nexports.default = Disqus;\nDisqus.propTypes = {\n  /*\n   * Tells the Disqus service how to identify the current page. \n   * When the Disqus embed is loaded, the identifier is used to look up \n   * the correct thread. \n   */\n  identifier: _propTypes.default.string,\n\n  /*\n   * Tells the Disqus service the title of the current page.\n   * This is used when creating the thread on Disqus.\n   */\n  title: _propTypes.default.string,\n\n  /*\n   * Tells the Disqus service the URL of the current page.\n   * This URL is used when a thread is created so that Disqus knows which\n   * page a thread belongs to.\n   * (If undefined, Disqus will use the global.location.href)\n   */\n  url: _propTypes.default.string\n};","import React from 'react'\nimport Disqus from 'gatsby-plugin-disqus'\n\nconst Comments = ({ id, title, url }) => (\n  <Disqus identifier={id} title={title} url={url} />\n)\n\nexport default Comments\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Comments from '../components/Comments'\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport SEO from '../components/Seo'\nimport { rhythm, scale } from '../utils/typography'\n\nconst getThumbnail = post =>\n  post.frontmatter.cover\n    ? post.frontmatter.cover.childImageSharp.fixed.src\n    : null\n\nconst BlogPostTemplate = ({ location, data, pageContext }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const { previous, next } = pageContext\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.excerpt}\n        pathname={location.pathname}\n        thumbnail={getThumbnail(post)}\n        type='article'\n      />\n      <h1>{post.frontmatter.title}</h1>\n      <p\n        style={{\n          ...scale(-1 / 5),\n          display: `block`,\n          marginBottom: rhythm(1),\n          marginTop: rhythm(-1)\n        }}\n      >\n        {post.frontmatter.date}\n      </p>\n      <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      <hr\n        style={{\n          marginBottom: rhythm(1)\n        }}\n      />\n      <Bio />\n\n      <ul\n        style={{\n          display: `flex`,\n          flexWrap: `wrap`,\n          justifyContent: `space-between`,\n          listStyle: `none`,\n          padding: 0,\n          marginLeft: 0\n        }}\n      >\n        <li>\n          {previous && (\n            <Link to={previous.fields.slug} rel='prev'>\n              ← {previous.frontmatter.title}\n            </Link>\n          )}\n        </li>\n        <li>\n          {next && (\n            <Link to={next.fields.slug} rel='next'>\n              {next.frontmatter.title} →\n            </Link>\n          )}\n        </li>\n      </ul>\n      <Comments\n        url={location.href}\n        title={post.frontmatter.title}\n        id={post.id}\n      />\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 240)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        cover {\n          childImageSharp {\n            fixed(width: 1200) {\n              width\n              height\n              src\n              srcSet\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}